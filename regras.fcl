// Block definition (there may be more than one block per file)
FUNCTION_BLOCK teste

// Define input variables
VAR_INPUT
    Distancia : REAL;
    Velocidade : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    pressaodofreio : REAL;
END_VAR

// Fuzzify input variable 'Temperature'
FUZZIFY Distancia
    TERM muitoproxima := (0, 1) (20, 0);
    TERM proxima := (2, 0) (20, 1) (60, 1) (130, 0); 
    TERM habitual := (60, 0) (100,1) (180,1) (350,0);
    TERM longe := (250, 0) (350, 1) (500, 1);
END_FUZZIFY

// Fuzzify input variable 'Moisture'
FUZZIFY  Velocidade
    TERM muitolenta := (0, 1) (5, 0);
    TERM lenta := (4, 0) (20, 1) (30, 0);
    TERM normal := (20,0) (38,1) (60, 0);
    TERM rapida := (45,0) (60,1) (100, 1);
END_FUZZIFY

// Defzzzify output variable 'ventilation'
DEFUZZIFY pressaodofreio
    TERM nenhuma := (0, 1) (10,0);
    TERM fraca := (10, 0) (20,1) (50,0);
    TERM normal := (40,0) (60,1) (80,0);
    TERM forte := (70,0) (90,1) (100,1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COA;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF Distancia IS muitoproxima 
                THEN pressaodofreio IS forte;

    RULE 2 : IF Distancia IS proxima 
                THEN pressaodofreio IS forte;

    RULE 3 : IF Distancia IS habitual 
                THEN pressaodofreio IS normal;

    RULE 4 : IF Distancia IS longe 
                THEN pressaodofreio IS nenhuma;

    RULE 5 : IF Distancia IS habitual and Velocidade is muitolenta
                THEN pressaodofreio IS nenhuma; 

    RULE 5 : IF Distancia IS habitual and Velocidade is lenta 
                THEN pressaodofreio IS fraca; 

    RULE 6 : IF Distancia IS habitual and Velocidade is normal 
                THEN pressaodofreio IS fraca; 

    RULE 7 : IF Distancia IS habitual and Velocidade is rapida
                THEN pressaodofreio IS normal; 
				
    RULE 8: IF Distancia IS longe AND Velocidade is normal 
               THEN pressaodofreio is nenhuma;

    RULE 5: IF Velocidade IS lenta AND Distancia IS longe 
               THEN pressaodofreio IS nenhuma;

    RULE 6: IF Velocidade IS lenta AND Distancia IS habitual 
               THEN pressaodofreio IS nenhuma;

    RULE 7: IF Velocidade IS lenta AND Distancia IS proxima 
               THEN pressaodofreio IS fraca;
 
    RULE 8: IF Velocidade IS lenta AND Distancia IS muitoproxima 
               THEN pressaodofreio IS normal;

    RULE 9: IF Velocidade IS normal AND Distancia IS longe 
               THEN pressaodofreio IS nenhuma;
 
    RULE 10: IF Velocidade IS normal AND Distancia IS habitual 
               THEN pressaodofreio IS nenhuma;

    RULE 11: IF Velocidade IS normal AND Distancia IS proxima 
               THEN pressaodofreio IS fraca;
 
    RULE 12: IF Velocidade IS normal AND Distancia IS muitoproxima 
               THEN pressaodofreio IS normal;

    RULE 13: IF Velocidade IS normal AND Distancia IS longe 
               THEN pressaodofreio IS nenhuma;
 
    RULE 14: IF Velocidade IS rapida AND Distancia IS habitual 
               THEN pressaodofreio IS normal;

    RULE 15: IF Velocidade IS rapida AND Distancia IS proxima 
               THEN pressaodofreio IS forte;
 
    RULE 16: IF Velocidade IS rapida AND Distancia IS muitoproxima 
               THEN pressaodofreio IS forte;
       
END_RULEBLOCK

END_FUNCTION_BLOCK
